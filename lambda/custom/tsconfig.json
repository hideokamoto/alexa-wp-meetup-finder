{
  // https://blog.yux3.net/entry/2017/02/05/000805
  "compilerOptions": {
    /* Basic Options */
    "target": "es2016",                          /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' or 'ESNEXT'. */
    "module": "commonjs",                     /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
    "lib": [ "esnext"],                             /* Specify library files to be included in the compilation. */
    //"outDir": "./dist", 
    "removeComments": true,
    /* Strict Type-Checking Options */
    "strict": true,                           /* Enable all strict type-checking options. */
    // 到達しえないコードがあるとエラー
    "allowUnreachableCode": false,
    // 到達しえないラベルがあるとエラー
    "allowUnusedLabels": false,
    // use strict; が自動でつく(module ならば勝手につくけど)
    "alwaysStrict": true,
    // 暗黙的な any があるとエラー
    "noImplicitAny": true,
    // this に型を明示しないとエラー
    "noImplicitThis": true,
    // 使っていないローカル変数があるとエラー
    "noUnusedLocals": true,
    // 使っていない引数があるとエラー
    "noUnusedParameters": true,
    // デフォルトで non-nullableになるので null チェック必須に
    "strictNullChecks": true,
    // エラーが可愛くなる
    "pretty": true,
    /* Report error when not all code paths in function return a value. */
    "noImplicitReturns": true,
    "noFallthroughCasesInSwitch": true,    /* Report errors for fallthrough cases in switch statement. */
    "noEmitHelpers": true,
    "importHelpers": true,

    /* Module Resolution Options */
    "moduleResolution": "node",            /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    "esModuleInterop": true                   /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
  },
  "exclude": [
    "node_modules"
  ]
}